#====================================CROSS-ENV CONFIGURATIONS==========================================#
## Quarkus setting
quarkus.application.name=payment-service
quarkus.http.root-path = /api

## Kubernetes setting
quarkus.kubernetes.namespace=foody-clone
quarkus.kubernetes.replicas=1
quarkus.kubernetes.resources.requests.memory=64Mi
quarkus.kubernetes.resources.requests.cpu=250m
quarkus.kubernetes.resources.limits.memory=512Mi
quarkus.kubernetes.resources.limits.cpu=1000m
quarkus.kubernetes.image-pull-policy=if-not-present

## Jaeger
quarkus.jaeger.service-name=payment-service

#====================================DEVELOPMENT CONFIGURATIONS==========================================#

#====================================Moves these configurations to config server==========================================#

quarkus.log.level=INFO
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

## Microprofile
org.eclipse.microprofile.rest.client.propagateHeaders=Authorization

## CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.headers=*
quarkus.http.cors.methods=*

## Jaeger
quarkus.jaeger.endpoint=http://jaeger-collector.${quarkus.kubernetes.namespace}:14268/api/traces
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1

%prod.greeting=[Production] Hello! I'm still alive
%dev.greeting=[Development] Hello! I'm still alive

## just use for payment-service
%dev.quarkus.http.port=1130

#====================================Moves these configurations to config server==========================================#